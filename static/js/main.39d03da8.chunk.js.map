{"version":3,"sources":["feature-editor/title/Title.js","feature-editor/scenario/steps/Annotation.js","feature-editor/scenario/steps/Text.js","lib/GherkinAstMutator.js","feature-editor/scenario/steps/Step.js","feature-editor/scenario/Scenario.js","FeatureEditor.js","FeatureRenderer.js","App.js","serviceWorker.js","index.js"],"names":["Title","props","handleUpdateFeatureName","updateFeatureName","bind","class","this","keyword","placeholder","defaultValue","title","onBlur","e","target","value","React","Component","Annotation","handleChange","state","annotation","slice","trim","newAnnotation","setState","onAnnotationChange","name","onChange","Text","keyDown","input","focus","type","ref","text","onTextChange","onKeyDown","key","updateStepAndCreateOne","GherkinAstMutator","scenarioAst","index","newScenarioAst","Object","assign","newStepAst","_newStepNode","stepsList","steps","parseInt","splice","push","stepAst","id","IdGenerator","uuid","uid","location","line","column","argument","undefined","Step","editStepAnnotation","editStepText","data-index","step","updateStep","onEditStep","updatedStepAst","onEditAndAddStep","Scenario","onEditScenarioName","editScenarioName","editStep","addStep","editAndAddStep","scenarioHeader","scenarioSteps","onClick","scenario","map","onAddStep","updateFeatureChild","addStepAt","FeatureEditor","onUpdateFeatureName","onUpdateFeatureChild","onAddNewScenario","createNewScenario","scenarioList","featureScenarios","sc","className","ast","feature","featureName","children","newName","updatedAst","onAstUpdated","childAst","isOutline","examples","tags","FeatureRenderer","txtDefinition","rows","readonly","App","featureTxt","join","featureAst","computeAst","updateAst","addNewScenario","textDef","newId","gherkinDocument","Parser","AstBuilder","parse","uri","newAst","newTxtDefinition","pretty","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","WebFont","load","google","families"],"mappings":"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","file":"static/js/main.39d03da8.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class Title extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleUpdateFeatureName = this.updateFeatureName.bind(this)\n  }\n\n  render() {\n    return (\n      <h1 class=\"editable-title\">\n        <span class=\"gherkin-keyword\">{this.props.keyword}:</span>\n        <input placeholder=\"Empty name\" defaultValue={this.props.title} onBlur={this.handleUpdateFeatureName}/>\n      </h1>\n    )\n  }\n\n  updateFeatureName(e) {\n    this.props.updateFeatureName(e.target.value)\n  }\n}","import React from 'react'\n\nexport default class Annotation extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.handleChange = this.handleChange.bind(this)\n    this.state = {\n      value: props.annotation.slice().trim()\n    }\n  }\n\n  handleChange(e) {\n    let newAnnotation = e.target.value\n\n    if (newAnnotation.trim() === \"\") {\n      this.setState({\n        value: this.props.annotation.slice().trim()\n      })\n      return\n    }\n\n    this.setState({\n      value: newAnnotation\n    })\n\n    this.props.onAnnotationChange(newAnnotation)\n  }\n\n  render() {\n    return (\n    <select class=\"gherkin-keyword\"\n            name=\"annotation\"\n            value={this.state.value}\n            onChange={this.handleChange}>\n      <option value=\"*\">*</option>\n      <option value=\"Given\">Given</option>\n      <option value=\"When\">When</option>\n      <option value=\"And\">And</option>\n      <option value=\"Then\">Then</option>\n      <option value=\"But\">But</option>\n    </select>\n    )\n  }\n}","import React from 'react'\n\nexport default class Text extends React.Component {\n  constructor(props) {\n    super(props)\n    this.keyDown = this.keyDown.bind(this)\n  }\n\n  componentDidMount(){\n    this.input.focus()\n  }\n\n  render() {\n    return (<>\n      <input type=\"text\"\n            ref={(input) => { this.input = input }}\n            defaultValue={this.props.text.trim()} name=\"text\"\n            onBlur={e => this.props.onTextChange(e.target.value)}\n            onKeyDown={this.keyDown}/>\n    </>)\n  }\n\n  keyDown(e) {\n    if (e.key === 'Enter') {\n      this.props.updateStepAndCreateOne(e.target.value)\n    }\n  }\n}","import { IdGenerator } from '@cucumber/messages'\n\nexport default class GherkinAstMutator {\n  static addStepAt(scenarioAst, index) {\n    const newScenarioAst = Object.assign(scenarioAst),\n          newStepAst = GherkinAstMutator._newStepNode()\n\n    let stepsList = scenarioAst.steps\n\n     if (index === parseInt(index, 10)) {\n      stepsList.splice(index + 1, 0, newStepAst)\n    } else {\n      stepsList.push(newStepAst)\n    }\n\n    return newScenarioAst\n  }\n\n  static updateStep(stepAst, keyword, text, index) {\n    const newStepAst = Object.assign(stepAst)\n\n    if (keyword) {\n      newStepAst.keyword = keyword + ' '\n    }\n\n    if (text) {\n      newStepAst.text = text\n    }\n\n    return newStepAst\n  }\n\n\n  static _newStepNode() {\n    const uid = IdGenerator.uuid()\n    return {\n      id: uid(),\n      keyword: \"* \",\n      location: {line: null, column: null},\n      text: \"\",\n      argument: undefined,\n    }\n  }\n}","import React from 'react'\nimport Annotation from './Annotation'\nimport Text from './Text'\nimport GherkinAstMutator from 'lib/GherkinAstMutator'\n\nexport default class Step extends React.Component {\n  constructor(props) {\n    super(props)\n    this.onAnnotationChange = this.editStepAnnotation.bind(this)\n    this.onTextChange = this.editStepText.bind(this)\n    this.updateStepAndCreateOne = this.updateStepAndCreateOne.bind(this)\n  }\n\n  render() {\n    return (\n      <li class=\"step\" data-index={this.props.index}>\n        <Annotation annotation={this.props.step.keyword} onAnnotationChange={this.onAnnotationChange} />\n        <Text text={this.props.step.text} onTextChange={this.onTextChange} updateStepAndCreateOne={this.updateStepAndCreateOne}/>\n      </li>\n    )\n  }\n\n  editStepAnnotation(keyword) {\n    const newStepAst = GherkinAstMutator.updateStep(this.props.step, keyword, null, this.props.index)\n    this.props.onEditStep(newStepAst, this.props.index)\n  }\n\n  editStepText(text) {\n    const newStepAst = GherkinAstMutator.updateStep(this.props.step, null, text, this.props.index)\n    this.props.onEditStep(newStepAst, this.props.index)\n  }\n\n  updateStepAndCreateOne(text) {\n    const updatedStepAst = GherkinAstMutator.updateStep(this.props.step, null, text, this.props.index)\n    this.props.onEditAndAddStep(updatedStepAst, this.props.index)\n  }\n}","import React from 'react'\nimport ScenarioStep from './steps/Step'\nimport GherkinAstMutator from 'lib/GherkinAstMutator'\n\nexport default class Scenario extends React.Component {\n  constructor(props) {\n    super(props)\n    this.onEditScenarioName = this.editScenarioName.bind(this)\n    this.onEditStep = this.editStep.bind(this)\n    this.addStep = this.addStep.bind(this)\n    this.onEditAndAddStep = this.editAndAddStep.bind(this)\n  }\n\n  render() {\n    return (\n      <li class=\"tile\">\n        {this.scenarioHeader()}\n        <ul class=\"steps-list\">\n          {this.scenarioSteps()}\n          <button class=\"btn--secondary\" onClick={this.addStep}>Add step</button>\n        </ul>\n      </li>\n    )\n  }\n\n  scenarioHeader() {\n    return <h2 class=\"editable-title\">\n      <span class=\"gherkin-keyword\">{this.props.scenario.keyword}:</span>\n      <input placeholder=\"Empty name\" defaultValue={this.props.scenario.name} onBlur={this.onEditScenarioName}/>\n    </h2>\n  }\n\n  scenarioSteps() {\n    return this.props.scenario.steps.map((step, index) =>\n      <ScenarioStep key={step.id} step={step} index={index} onEditStep={this.onEditStep} onAddStep={this.addStep} onEditAndAddStep={this.onEditAndAddStep}/>\n    )\n  }\n\n  editScenarioName(e) {\n    let newScenarioAst = Object.assign(this.props.scenario)\n    newScenarioAst.name = e.target.value\n    this.props.updateFeatureChild(newScenarioAst, this.props.index)\n  }\n\n  editStep(stepAst, index) {\n    let newScenarioAst = Object.assign(this.props.scenario)\n    newScenarioAst.steps[index] = stepAst\n    this.props.updateFeatureChild(newScenarioAst, this.props.index)\n  }\n\n  addStep(index) {\n    let newScenarioAst = GherkinAstMutator.addStepAt(this.props.scenario, index)\n\n    this.props.updateFeatureChild(newScenarioAst, this.props.index)\n\n    return newScenarioAst\n  }\n\n  editAndAddStep(newStepAst, index) {\n    let newScenarioAst = Object.assign(this.props.scenario)\n    newScenarioAst.steps[index] = newStepAst\n    newScenarioAst = GherkinAstMutator.addStepAt(newScenarioAst, index)\n\n    this.props.updateFeatureChild(newScenarioAst, this.props.index)\n\n    return newScenarioAst\n  }\n}\n","import React from 'react';\nimport Title from './feature-editor/title/Title'\nimport Scenario from './feature-editor/scenario/Scenario'\nimport { IdGenerator } from '@cucumber/messages'\n\nexport default class FeatureEditor extends React.Component {\n  constructor(props) {\n    super(props)\n    this.onUpdateFeatureName = this.updateFeatureName.bind(this)\n    this.onUpdateFeatureChild = this.updateFeatureChild.bind(this)\n    this.onAddNewScenario = this.createNewScenario.bind(this)\n  }\n\n  render() {\n    const scenarioList = this.featureScenarios().map((sc, index) =>\n      <>\n        <Scenario key={sc.scenario.id} scenario={sc.scenario} index={index} updateFeatureChild={this.onUpdateFeatureChild}/>\n        <button class=\"btn--main\" onClick={() => this.onAddNewScenario(index, false)}>Add scenario</button>\n        {/* <button class=\"btn--main\" onClick={() => this.onAddNewScenario(index, true)}>Add scenario outline</button> */}\n      </>\n    )\n\n    return (\n      <div className=\"visual-editor\">\n        <Title keyword={this.props.ast.feature.keyword} title={this.featureName()} updateFeatureName={this.onUpdateFeatureName}/>\n        <ul>\n          {scenarioList}\n        </ul>\n      </div>\n    )\n  }\n\n  featureName() {\n    return this.props.ast.feature.name\n  }\n\n  featureScenarios() {\n    return this.props.ast.feature.children\n  }\n\n  updateFeatureName(newName) {\n    let updatedAst = Object.assign(this.props.ast)\n    updatedAst.feature.name = newName\n\n    this.props.onAstUpdated(updatedAst)\n  }\n\n  updateFeatureChild(childAst, index) {\n    let updatedAst = Object.assign(this.props.ast)\n    updatedAst.feature.children[index] = {scenario: childAst}\n\n    this.props.onAstUpdated(updatedAst)\n  }\n\n  createNewScenario(index, isOutline) {\n    let updatedAst = Object.assign(this.props.ast)\n\n    let newScenarioAst = {\n      examples: [],\n      id: IdGenerator.uuid()(),\n      keyword: (isOutline)? 'Scenario Outline' : 'Scenario',\n      location: { line: null, column: null },\n      name: \"\",\n      steps: [],\n      tags: []\n    }\n\n    updatedAst.feature.children.splice(index + 1, 0, { scenario: newScenarioAst })\n\n    this.props.onAstUpdated(updatedAst)\n  }\n}","import React from 'react'\n\nexport default class FeatureRenderer extends React.Component {\n  render() {\n    return <div className=\"text-renderer\">\n      <textarea id=\"gherkin-render\" value={this.props.txtDefinition} rows=\"20\" readonly=\"true\"/>\n    </div>\n  }\n}","import React from 'react'\nimport './App.sass'\nimport FeatureEditor from './FeatureEditor'\nimport FeatureRenderer from './FeatureRenderer'\nimport { IdGenerator } from '@cucumber/messages'\nimport { AstBuilder, Parser } from '@cucumber/gherkin'\nimport { pretty } from '@cucumber/gherkin-utils'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    const featureTxt = [\n      \"Feature:\",\n      \"\",\n      \"  Scenario: A simple Gherkin example\",\n      \"    Given some context\",\n      \"    When I perform an action\",\n      \"    Then I should observe an expected outcome\"\n    ].join(\"\\n\")\n\n    const featureAst = this.computeAst(featureTxt)\n\n    this.state = {\n      txtDefinition: featureTxt,\n      ast: featureAst\n    }\n\n    this.onAstUpdated = this.updateAst.bind(this)\n  }\n\n  render() {\n    return (\n      <div className=\"l-app\">\n        <FeatureEditor ast={this.state.ast} onAstUpdated={this.onAstUpdated} addNewScenario={this.onAddNewScenario}/>\n        <FeatureRenderer txtDefinition={this.state.txtDefinition}/>\n      </div>\n    )\n  }\n\n  computeAst(textDef) {\n    const newId = IdGenerator.uuid()\n    const parser = new Parser(new AstBuilder(newId))\n    const gherkinDocument = parser.parse(textDef)\n    gherkinDocument.uri = ''\n\n    return gherkinDocument\n  }\n\n  updateAst(newAst) {\n    const newTxtDefinition = pretty(newAst)\n\n    this.setState({\n      ast: newAst,\n      txtDefinition: newTxtDefinition\n    })\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport WebFont from 'webfontloader'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nWebFont.load({\n  google: {\n    families: ['Open Sans:300,400,600', 'sans-serif']\n  }\n});"],"sourceRoot":""}