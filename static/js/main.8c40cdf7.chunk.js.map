{"version":3,"sources":["feature-editor/title/Title.js","feature-editor/description/Description.js","feature-editor/scenario/steps/Annotation.js","feature-editor/scenario/steps/Text.js","lib/GherkinAstMutator.js","feature-editor/scenario/steps/Step.js","feature-editor/scenario/Scenario.js","FeatureEditor.js","FeatureRenderer.js","App.js","serviceWorker.js","index.js"],"names":["Title","props","handleUpdateFeatureName","updateFeatureName","bind","class","this","keyword","placeholder","defaultValue","title","onBlur","e","target","value","React","Component","Description","description","updateDescription","Annotation","handleChange","state","annotation","slice","trim","newAnnotation","setState","onAnnotationChange","name","onChange","Text","keyDown","input","focus","type","ref","text","onTextChange","onKeyDown","key","updateStepAndCreateOne","GherkinAstMutator","scenarioAst","index","newScenarioAst","Object","assign","steps","length","newStepAst","_newStepNode","stepsList","parseInt","splice","push","stepAst","id","IdGenerator","uuid","uid","location","line","column","argument","undefined","Step","editStepAnnotation","editStepText","data-index","step","updateStep","onEditStep","updatedStepAst","onEditAndAddStep","Scenario","onEditScenarioName","editScenarioName","editStep","addStep","editAndAddStep","scenarioHeader","scenarioSteps","onClick","scenario","onDeleteScenario","map","onAddStep","updateFeatureChild","addStepAt","FeatureEditor","onUpdateFeatureName","onUpdateFeatureDescription","updateFeatureDescription","onUpdateFeatureChild","onAddNewScenario","createNewScenario","deleteScenario","scenarioList","featureScenarios","scenarioComponents","sc","className","ast","feature","featureName","featureDescription","children","newName","updatedAst","onAstUpdated","newDescription","childAst","isOutline","examples","tags","actualIndex","FeatureRenderer","txtDefinition","rows","readonly","App","featureTxt","join","featureAst","computeAst","updateAst","addNewScenario","textDef","newId","gherkinDocument","Parser","AstBuilder","parse","uri","newAst","newTxtDefinition","pretty","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","WebFont","load","google","families"],"mappings":"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","file":"static/js/main.8c40cdf7.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class Title extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleUpdateFeatureName = this.updateFeatureName.bind(this)\n  }\n\n  render() {\n    return (\n      <h1 class=\"editable-title\">\n        <span class=\"gherkin-keyword\">{this.props.keyword}:</span>\n        <input placeholder=\"Empty name\" defaultValue={this.props.title} onBlur={this.handleUpdateFeatureName}/>\n      </h1>\n    )\n  }\n\n  updateFeatureName(e) {\n    this.props.updateFeatureName(e.target.value)\n  }\n}","import React from 'react';\n\nexport default function Description(props) {\n  return (\n    <div class=\"description-wrapper\">\n      <textarea class=\"editable-description\" placeholder=\"No description\" defaultValue={props.description} onBlur={(e) => props.updateDescription(e.target.value)}/>\n    </div>\n  )\n}","import React from 'react'\n\nexport default class Annotation extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.handleChange = this.handleChange.bind(this)\n    this.state = {\n      value: props.annotation.slice().trim()\n    }\n  }\n\n  handleChange(e) {\n    let newAnnotation = e.target.value\n\n    if (newAnnotation.trim() === \"\") {\n      this.setState({\n        value: this.props.annotation.slice().trim()\n      })\n      return\n    }\n\n    this.setState({\n      value: newAnnotation\n    })\n\n    this.props.onAnnotationChange(newAnnotation)\n  }\n\n  render() {\n    return (\n    <select class=\"gherkin-keyword\"\n            name=\"annotation\"\n            value={this.state.value}\n            onChange={this.handleChange}>\n      <option value=\"*\">*</option>\n      <option value=\"Given\">Given</option>\n      <option value=\"When\">When</option>\n      <option value=\"And\">And</option>\n      <option value=\"Then\">Then</option>\n      <option value=\"But\">But</option>\n    </select>\n    )\n  }\n}","import React from 'react'\n\nexport default class Text extends React.Component {\n  constructor(props) {\n    super(props)\n    this.keyDown = this.keyDown.bind(this)\n  }\n\n  componentDidMount(){\n    this.input.focus()\n  }\n\n  render() {\n    return (<>\n      <input type=\"text\"\n            ref={(input) => { this.input = input }}\n            defaultValue={this.props.text.trim()} name=\"text\"\n            onBlur={e => this.props.onTextChange(e.target.value)}\n            onKeyDown={this.keyDown}/>\n    </>)\n  }\n\n  keyDown(e) {\n    if (e.key === 'Enter') {\n      this.props.updateStepAndCreateOne(e.target.value)\n    }\n  }\n}","import { IdGenerator } from '@cucumber/messages'\n\nexport default class GherkinAstMutator {\n  static addStepAt(scenarioAst, index) {\n    const newScenarioAst = Object.assign(scenarioAst),\n          keyword = (newScenarioAst.steps.length > 0)? \"And \" : \"Given \",\n          newStepAst = GherkinAstMutator._newStepNode(keyword)\n\n    let stepsList = scenarioAst.steps\n\n     if (index === parseInt(index, 10)) {\n      stepsList.splice(index + 1, 0, newStepAst)\n    } else {\n      stepsList.push(newStepAst)\n    }\n\n    return newScenarioAst\n  }\n\n  static updateStep(stepAst, keyword, text, index) {\n    const newStepAst = Object.assign(stepAst)\n\n    if (keyword) {\n      newStepAst.keyword = keyword + ' '\n    }\n\n    if (text) {\n      newStepAst.text = text\n    }\n\n    return newStepAst\n  }\n\n\n  static _newStepNode(keyword) {\n    const uid = IdGenerator.uuid()\n    return {\n      id: uid(),\n      keyword: keyword,\n      location: {line: null, column: null},\n      text: \"\",\n      argument: undefined,\n    }\n  }\n}","import React from 'react'\nimport Annotation from './Annotation'\nimport Text from './Text'\nimport GherkinAstMutator from 'lib/GherkinAstMutator'\n\nexport default class Step extends React.Component {\n  constructor(props) {\n    super(props)\n    this.onAnnotationChange = this.editStepAnnotation.bind(this)\n    this.onTextChange = this.editStepText.bind(this)\n    this.updateStepAndCreateOne = this.updateStepAndCreateOne.bind(this)\n  }\n\n  render() {\n    return (\n      <li class=\"step\" data-index={this.props.index}>\n        <Annotation annotation={this.props.step.keyword} onAnnotationChange={this.onAnnotationChange} />\n        <Text text={this.props.step.text} onTextChange={this.onTextChange} updateStepAndCreateOne={this.updateStepAndCreateOne}/>\n      </li>\n    )\n  }\n\n  editStepAnnotation(keyword) {\n    const newStepAst = GherkinAstMutator.updateStep(this.props.step, keyword, null, this.props.index)\n    this.props.onEditStep(newStepAst, this.props.index)\n  }\n\n  editStepText(text) {\n    const newStepAst = GherkinAstMutator.updateStep(this.props.step, null, text, this.props.index)\n    this.props.onEditStep(newStepAst, this.props.index)\n  }\n\n  updateStepAndCreateOne(text) {\n    const updatedStepAst = GherkinAstMutator.updateStep(this.props.step, null, text, this.props.index)\n    this.props.onEditAndAddStep(updatedStepAst, this.props.index)\n  }\n}","import React from 'react'\nimport ScenarioStep from './steps/Step'\nimport GherkinAstMutator from 'lib/GherkinAstMutator'\n\nexport default class Scenario extends React.Component {\n  constructor(props) {\n    super(props)\n    this.onEditScenarioName = this.editScenarioName.bind(this)\n    this.onEditStep = this.editStep.bind(this)\n    this.addStep = this.addStep.bind(this)\n    this.onEditAndAddStep = this.editAndAddStep.bind(this)\n  }\n\n  render() {\n    return (\n      <li class=\"tile\">\n        {this.scenarioHeader()}\n        <ul class=\"steps-list\">\n          {this.scenarioSteps()}\n          <button class=\"btn--secondary\" onClick={this.addStep}>Add step</button>\n        </ul>\n      </li>\n    )\n  }\n\n  scenarioHeader() {\n    return <h2 class=\"editable-title\">\n      <span class=\"gherkin-keyword\">{this.props.scenario.keyword}:</span>\n      <input placeholder=\"Empty name\" defaultValue={this.props.scenario.name} onBlur={this.onEditScenarioName}/>\n      <button class=\"btn--secondary\" onClick={() => this.props.onDeleteScenario(this.props.index)}>Delete</button>\n    </h2>\n  }\n\n  scenarioSteps() {\n    return this.props.scenario.steps.map((step, index) =>\n      <ScenarioStep key={step.id} step={step} index={index} onEditStep={this.onEditStep} onAddStep={this.addStep} onEditAndAddStep={this.onEditAndAddStep}/>\n    )\n  }\n\n  editScenarioName(e) {\n    let newScenarioAst = Object.assign(this.props.scenario)\n    newScenarioAst.name = e.target.value\n    this.props.updateFeatureChild(newScenarioAst, this.props.index)\n  }\n\n  editStep(stepAst, index) {\n    let newScenarioAst = Object.assign(this.props.scenario)\n    newScenarioAst.steps[index] = stepAst\n    this.props.updateFeatureChild(newScenarioAst, this.props.index)\n  }\n\n  addStep(index) {\n    let newScenarioAst = GherkinAstMutator.addStepAt(this.props.scenario, index)\n\n    this.props.updateFeatureChild(newScenarioAst, this.props.index)\n\n    return newScenarioAst\n  }\n\n  editAndAddStep(newStepAst, index) {\n    let newScenarioAst = Object.assign(this.props.scenario)\n    newScenarioAst.steps[index] = newStepAst\n    newScenarioAst = GherkinAstMutator.addStepAt(newScenarioAst, index)\n\n    this.props.updateFeatureChild(newScenarioAst, this.props.index)\n\n    return newScenarioAst\n  }\n}\n","import React from 'react';\nimport Title from './feature-editor/title/Title'\nimport Description from './feature-editor/description/Description'\nimport Scenario from './feature-editor/scenario/Scenario'\nimport { IdGenerator } from '@cucumber/messages'\n\nexport default class FeatureEditor extends React.Component {\n  constructor(props) {\n    super(props)\n    this.onUpdateFeatureName = this.updateFeatureName.bind(this)\n    this.onUpdateFeatureDescription = this.updateFeatureDescription.bind(this)\n    this.onUpdateFeatureChild = this.updateFeatureChild.bind(this)\n    this.onAddNewScenario = this.createNewScenario.bind(this)\n    this.deleteScenario = this.deleteScenario.bind(this)\n  }\n\n  render() {\n    let scenarioList = null\n\n    if (this.featureScenarios().length > 0) {\n      const scenarioComponents = this.featureScenarios().map((sc, index) =>\n        <>\n          <Scenario key={sc.scenario.id} scenario={sc.scenario} index={index} updateFeatureChild={this.onUpdateFeatureChild} onDeleteScenario={this.deleteScenario}/>\n          <button class=\"tiles-list__gutter-action btn--main\" onClick={() => this.onAddNewScenario(index, false)}>+</button>\n        </>\n      )\n      scenarioList =\n        <ul class=\"tiles-list\">\n          <button class=\"tiles-list__gutter-action btn--main\" onClick={() => this.onAddNewScenario(\":first\", false)}>+</button>\n          {scenarioComponents}\n        </ul>\n    } else {\n      scenarioList = <>\n        <button class=\"btn--main\" onClick={() => this.onAddNewScenario(0, false)}>Add a first scenario</button>\n      </>\n    }\n\n    return (\n      <div className=\"visual-editor\">\n        <Title keyword={this.props.ast.feature.keyword} title={this.featureName()} updateFeatureName={this.onUpdateFeatureName}/>\n        <Description description={this.featureDescription()} updateDescription={this.onUpdateFeatureDescription} />\n        {scenarioList}\n      </div>\n    )\n  }\n\n  featureName() {\n    return this.props.ast.feature.name\n  }\n\n  featureDescription() {\n    return this.props.ast.feature.description\n  }\n\n  featureScenarios() {\n    return this.props.ast.feature.children\n  }\n\n  updateFeatureName(newName) {\n    let updatedAst = Object.assign(this.props.ast)\n    updatedAst.feature.name = newName\n\n    this.props.onAstUpdated(updatedAst)\n  }\n\n  updateFeatureDescription(newDescription) {\n    let updatedAst = Object.assign(this.props.ast)\n    updatedAst.feature.description = newDescription\n\n    this.props.onAstUpdated(updatedAst)\n  }\n\n  updateFeatureChild(childAst, index) {\n    let updatedAst = Object.assign(this.props.ast)\n    updatedAst.feature.children[index] = {scenario: childAst}\n\n    this.props.onAstUpdated(updatedAst)\n  }\n\n  createNewScenario(index, isOutline) {\n    let updatedAst = Object.assign(this.props.ast)\n\n    let newScenarioAst = {\n      examples: [],\n      id: IdGenerator.uuid()(),\n      keyword: (isOutline)? 'Scenario Outline' : 'Scenario',\n      location: { line: null, column: null },\n      name: \"\",\n      steps: [],\n      tags: []\n    }\n\n    const actualIndex = (index === \":first\")? 0 : index + 1\n    updatedAst.feature.children.splice(actualIndex, 0, { scenario: newScenarioAst })\n\n    this.props.onAstUpdated(updatedAst)\n  }\n\n  deleteScenario(index) {\n    let updatedAst = Object.assign(this.props.ast)\n    updatedAst.feature.children.splice(index, 1)\n    this.props.onAstUpdated(updatedAst)\n  }\n}","import React from 'react'\n\nexport default class FeatureRenderer extends React.Component {\n  render() {\n    return <div className=\"text-renderer\">\n      <textarea id=\"gherkin-render\" value={this.props.txtDefinition} rows=\"20\" readonly=\"true\"/>\n    </div>\n  }\n}","import React from 'react'\nimport './App.sass'\nimport FeatureEditor from './FeatureEditor'\nimport FeatureRenderer from './FeatureRenderer'\nimport { IdGenerator } from '@cucumber/messages'\nimport { AstBuilder, Parser } from '@cucumber/gherkin'\nimport { pretty } from '@cucumber/gherkin-utils'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    const featureTxt = [\n      \"Feature:\",\n      \"You can add a description to the feature\",\n      \"  Scenario: A simple Gherkin example\",\n      \"    Given some context\",\n      \"    When I perform an action\",\n      \"    Then I should observe an expected outcome\"\n    ].join(\"\\n\")\n\n    const featureAst = this.computeAst(featureTxt)\n\n    this.state = {\n      txtDefinition: featureTxt,\n      ast: featureAst\n    }\n\n    this.onAstUpdated = this.updateAst.bind(this)\n  }\n\n  render() {\n    return (\n      <div className=\"l-app\">\n        <FeatureEditor ast={this.state.ast} onAstUpdated={this.onAstUpdated} addNewScenario={this.onAddNewScenario}/>\n        <FeatureRenderer txtDefinition={this.state.txtDefinition}/>\n      </div>\n    )\n  }\n\n  computeAst(textDef) {\n    const newId = IdGenerator.uuid()\n    const parser = new Parser(new AstBuilder(newId))\n    const gherkinDocument = parser.parse(textDef)\n    gherkinDocument.uri = ''\n\n    return gherkinDocument\n  }\n\n  updateAst(newAst) {\n    const newTxtDefinition = pretty(newAst)\n\n    this.setState({\n      ast: newAst,\n      txtDefinition: newTxtDefinition\n    })\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport WebFont from 'webfontloader'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nWebFont.load({\n  google: {\n    families: ['Open Sans:300,400,600', 'sans-serif']\n  }\n});"],"sourceRoot":""}