{"version":3,"sources":["feature-editor/commons/EditableTitle.js","feature-editor/commons/Description.js","feature-editor/scenario/ScenarioHeaderRender.js","lib/GherkinAstMutator.js","feature-editor/scenario/StepTextRender.js","feature-editor/scenario/StepKeywordRender.js","feature-editor/scenario/StepKeywordContainer.js","feature-editor/scenario/StepRender.js","feature-editor/scenario/StepContainer.js","feature-editor/scenario/ScenarioStepsRender.js","feature-editor/scenario/ScenarioRender.js","feature-editor/scenario/ScenarioContainer.js","FeatureEditorRender.js","FeatureEditorContainer.js","FeatureRenderer.js","App.js","serviceWorker.js","index.js"],"names":["props","className","keyword","placeholder","defaultValue","title","onBlur","e","updateTitle","target","value","class","description","updateDescription","EditableTitle","name","actions","editScenarioName","onClick","onDeleteScenario","GherkinAstMutator","scenarioAst","index","newScenarioAst","Object","assign","steps","length","newStepAst","_newStepNode","stepsList","parseInt","splice","push","stepAst","text","id","IdGenerator","uuid","uid","location","line","column","argument","undefined","type","autoFocus","trim","onTextChange","onKeyDown","key","updateStepAndCreateOne","onChange","onAnnotationChange","useState","slice","setKeyword","StepKeywordRender","newKeyword","stepEditionMethods","editStepAnnotation","editStepText","data-index","StepKeywordContainer","StepTextRender","updateStep","step","onEditStep","updatedStepAst","onEditAndAddStep","StepRender","map","StepContainer","editStep","onAddStep","addStep","editAndAddStep","ScenarioHeaderRender","scenarioHeaderActions","Description","updateScenarioDescription","ScenarioStepsRender","scenarioStepsActions","scenarioIndex","mutableScenarioAST","scenario","newName","updateFeatureChild","addStepAt","newStepAST","ScenarioRender","newDescription","scenariosList","scenarioActions","featureChildren","scenarioComponents","sc","ScenarioContainer","deleteScenario","createNewScenario","updateFeatureName","updateFeatureDescription","featureAST","ast","feature","mutableFeatureAST","childAst","children","onAstUpdated","isOutline","examples","tags","actualIndex","FeatureEditorRender","txtDefinition","rows","readonly","App","featureTxt","join","featureAst","computeAst","state","updateAst","bind","FeatureEditorContainer","this","addNewScenario","onAddNewScenario","FeatureRenderer","textDef","newId","gherkinDocument","Parser","AstBuilder","parse","uri","newAst","newTxtDefinition","pretty","setState","React","Component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","WebFont","load","google","families"],"mappings":"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","file":"static/js/main.d087765a.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function(props) {\n  return (\n      <>\n        <span className=\"gherkin-keyword\">{ props.keyword }:</span>\n        <input placeholder=\"Empty name\" defaultValue={ props.title }\n          onBlur={ (e) => props.updateTitle(e.target.value) }/>\n      </>\n    )\n}\n","import React from 'react';\n\nexport default function(props) {\n  return (\n    <div class=\"description-wrapper\">\n      <textarea class=\"editable-description\" placeholder=\"No description\" defaultValue={props.description} onBlur={(e) => props.updateDescription(e.target.value)}/>\n    </div>\n  )\n}","import React from 'react'\nimport EditableTitle from '../commons/EditableTitle'\n\nexport default function(props) {\n  return <h2 className=\"editable-title\">\n    <EditableTitle\n      keyword={ props.keyword }\n      title={ props.name }\n      updateTitle={ props.actions.editScenarioName }\n    />\n    <button className=\"btn--secondary\" onClick={ props.actions.onDeleteScenario }>Delete</button>\n  </h2>\n}","import { IdGenerator } from '@cucumber/messages'\n\nexport default class GherkinAstMutator {\n  static addStepAt(scenarioAst, index) {\n    const newScenarioAst = Object.assign(scenarioAst),\n          keyword = (newScenarioAst.steps.length > 0)? \"And \" : \"Given \",\n          newStepAst = GherkinAstMutator._newStepNode(keyword)\n\n    let stepsList = scenarioAst.steps\n\n     if (index === parseInt(index, 10)) {\n      stepsList.splice(index + 1, 0, newStepAst)\n    } else {\n      stepsList.push(newStepAst)\n    }\n\n    return newScenarioAst\n  }\n\n  static updateStep(stepAst, keyword, text, index) {\n    const newStepAst = Object.assign(stepAst)\n\n    if (keyword) {\n      newStepAst.keyword = keyword + ' '\n    }\n\n    if (text) {\n      newStepAst.text = text\n    }\n\n    return newStepAst\n  }\n\n\n  static _newStepNode(keyword) {\n    const uid = IdGenerator.uuid()\n    return {\n      id: uid(),\n      keyword: keyword,\n      location: {line: null, column: null},\n      text: \"\",\n      argument: undefined,\n    }\n  }\n}","import React from 'react'\n\nexport default function(props) {\n  function handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      props.updateStepAndCreateOne(e.target.value)\n    }\n  }\n\n  return <>\n      <input type=\"text\" autoFocus\n            defaultValue={props.text.trim()} name=\"text\"\n            onBlur={e => props.onTextChange(e.target.value)}\n            onKeyDown={handleKeyDown}/>\n    </>\n}","import React from 'react'\n\nexport default function(props) {\n  return <select class=\"gherkin-keyword\"\n          name=\"annotation\"\n          value={ props.keyword }\n          onChange={(e) => { props.onAnnotationChange(e.target.value) }}>\n    <option value=\"*\">*</option>\n    <option value=\"Given\">Given</option>\n    <option value=\"When\">When</option>\n    <option value=\"And\">And</option>\n    <option value=\"Then\">Then</option>\n    <option value=\"But\">But</option>\n  </select>\n}","import React, { useState } from 'react'\nimport StepKeywordRender from './StepKeywordRender'\n\nexport default function(props) {\n  const [keyword, setKeyword] = useState(props.keyword.slice().trim())\n\n  function handleKeywordChange(newKeyword) {\n    if (newKeyword.trim() === \"\") {\n      setKeyword(props.keyword.slice().trim())\n      return\n    }\n\n    setKeyword(newKeyword)\n    props.onAnnotationChange(newKeyword)\n  }\n\n  return <>\n    <StepKeywordRender keyword={ keyword } onAnnotationChange={ handleKeywordChange } />\n  </>\n}","import React from 'react'\nimport StepTextRender from './StepTextRender'\nimport StepKeywordContainer from './StepKeywordContainer'\n\nexport default function(props) {\n  const { editStepAnnotation, editStepText, updateStepAndCreateOne } = props.stepEditionMethods\n\n  return (\n    <li class=\"step\" data-index={props.index}>\n      <StepKeywordContainer keyword={props.keyword} onAnnotationChange={ editStepAnnotation } />\n      <StepTextRender text={props.text} onTextChange={ editStepText } updateStepAndCreateOne={ updateStepAndCreateOne} />\n    </li>\n  )\n}","import React from 'react'\nimport GherkinAstMutator from 'lib/GherkinAstMutator'\nimport StepRender from './StepRender'\n\nexport default function(props) {\n  const stepEditionMethods = {\n    editStepAnnotation(keyword) {\n      const newStepAst = GherkinAstMutator.updateStep(props.step, keyword, null, props.index)\n      props.onEditStep(newStepAst, props.index)\n    },\n\n    editStepText(text) {\n      const newStepAst = GherkinAstMutator.updateStep(props.step, null, text, props.index)\n      props.onEditStep(newStepAst, props.index)\n    },\n\n    updateStepAndCreateOne(text) {\n      const updatedStepAst = GherkinAstMutator.updateStep(props.step, null, text, props.index)\n      props.onEditAndAddStep(updatedStepAst, props.index)\n    }\n  }\n\n  return <>\n    <StepRender index={ props.index }\n                keyword={ props.step.keyword }\n                text={ props.step.text }\n                stepEditionMethods={ stepEditionMethods }/>\n  </>\n}","import React from 'react'\nimport StepContainer from './StepContainer'\n\nexport default function(props) {\n  return <ul className=\"steps-list\">\n    { props.steps.map((step, index) =>\n      <StepContainer\n        key={ step.id }\n        step={ step }\n        index={ index }\n        onEditStep={ props.actions.editStep }\n        onAddStep={ props.actions.addStep }\n        onEditAndAddStep={ props.actions.editAndAddStep }/>)\n    }\n    <button className=\"btn--secondary\" onClick={ props.actions.addStep }>Add step</button>\n  </ul>\n}","import React from 'react'\nimport ScenarioHeaderRender from './ScenarioHeaderRender'\nimport Description from '../commons/Description'\nimport ScenarioStepsRender from './ScenarioStepsRender'\n\nexport default function(props) {\n  return <li className=\"tile\">\n    <ScenarioHeaderRender\n      index={ props.index }\n      keyword={ props.keyword }\n      name={ props.name }\n      actions={ props.scenarioHeaderActions }\n    />\n\n    <Description description={ props.description } updateDescription={ props.updateScenarioDescription } />\n    <ScenarioStepsRender steps={ props.steps } actions={ props.scenarioStepsActions }/>\n  </li>\n}","import React from 'react'\nimport ScenarioRender from './ScenarioRender'\nimport GherkinAstMutator from 'lib/GherkinAstMutator'\n\nexport default function(props) {\n  const scenarioIndex = props.index\n  let mutableScenarioAST = { ...props.scenario }\n\n  const scenarioHeaderActions = {\n    editScenarioName(newName) {\n      mutableScenarioAST.name = newName\n      return props.updateFeatureChild(mutableScenarioAST, scenarioIndex)\n    },\n\n    onDeleteScenario() {\n      return props.onDeleteScenario(scenarioIndex)\n    }\n  }\n\n  function updateScenarioDescription(newDescription) {\n    mutableScenarioAST.description = newDescription\n    return props.updateFeatureChild(mutableScenarioAST, scenarioIndex)\n  }\n\n  const scenarioStepsActions = {\n    addStep(index) {\n      const newScenarioAst = GherkinAstMutator.addStepAt(mutableScenarioAST, index)\n      props.updateFeatureChild(newScenarioAst, scenarioIndex)\n\n      return newScenarioAst\n    },\n\n    editStep(newStepAST, index) {\n      mutableScenarioAST.steps[index] = newStepAST\n      props.updateFeatureChild(mutableScenarioAST, scenarioIndex)\n\n      return mutableScenarioAST\n    },\n\n    editAndAddStep(newStepAST, index) {\n      mutableScenarioAST.steps[index] = newStepAST\n      mutableScenarioAST = GherkinAstMutator.addStepAt(mutableScenarioAST, index)\n\n      props.updateFeatureChild(mutableScenarioAST, scenarioIndex)\n\n      return mutableScenarioAST\n    }\n  }\n\n  return <>\n    <ScenarioRender\n      index={ scenarioIndex }\n      keyword={ mutableScenarioAST.keyword }\n      name={ mutableScenarioAST.name }\n      description={ mutableScenarioAST.description }\n      updateScenarioDescription = { updateScenarioDescription }\n      steps = { mutableScenarioAST.steps }\n      scenarioHeaderActions={ scenarioHeaderActions }\n      scenarioStepsActions={ scenarioStepsActions }\n    />\n  </>\n}","import React from 'react'\nimport EditableTitle from './feature-editor/commons/EditableTitle'\nimport Description from './feature-editor/commons/Description'\nimport ScenarioContainer from './feature-editor/scenario/ScenarioContainer'\n\nexport default function(props) {\n  let scenariosList = null,\n      scenarioActions = props.scenarioActions\n\n  if (props.featureChildren.length > 0) {\n    const scenarioComponents = props.featureChildren.map((sc, index) =>\n      <>\n        <ScenarioContainer\n          key={ sc.scenario.id }\n          scenario={ sc.scenario }\n          index={ index }\n          updateFeatureChild={ scenarioActions.updateFeatureChild }\n          onDeleteScenario={ scenarioActions.deleteScenario }\n        />\n\n        <button className=\"tiles-list__gutter-action btn--main\"\n          onClick={() => scenarioActions.createNewScenario(index, false)}>\n          +\n        </button>\n      </>\n    )\n\n    scenariosList = <ul className=\"tiles-list\">\n        <button className=\"tiles-list__gutter-action btn--main\"\n          onClick={() => scenarioActions.createNewScenario(\":first\", false)}>+</button>\n        { scenarioComponents }\n      </ul>\n  } else {\n    scenariosList = <>\n      <button className=\"btn--main\" onClick={() => scenarioActions.createNewScenario(0, false)}>Add a first scenario</button>\n    </>\n  }\n\n  return <div className=\"visual-editor\">\n            <h1 className=\"editable-title\">\n              <EditableTitle\n                keyword={ props.keyword }\n                title={ props.name }\n                updateTitle={ props.updateFeatureName }/>\n            </h1>\n            <Description description={ props.description } updateDescription={ props.updateFeatureDescription } />\n            { scenariosList }\n          </div>\n}","import React from 'react'\nimport FeatureEditorRender from './FeatureEditorRender'\nimport { IdGenerator } from '@cucumber/messages'\n\nexport default function(props) {\n  const featureAST = props.ast.feature\n  let mutableFeatureAST = {...props.ast}\n\n  const scenarioActions = {\n    updateFeatureChild(childAst, index) {\n      mutableFeatureAST.feature.children[index] = { scenario: childAst }\n      props.onAstUpdated(mutableFeatureAST)\n    },\n\n    createNewScenario(index, isOutline) {\n      const newScenarioAst = {\n        examples: [],\n        id: IdGenerator.uuid()(),\n        keyword: (isOutline)? 'Scenario Outline' : 'Scenario',\n        location: { line: null, column: null },\n        name: \"\",\n        steps: [],\n        tags: []\n      }\n\n      const actualIndex = (index === \":first\")? 0 : index + 1\n      mutableFeatureAST.feature.children.splice(actualIndex, 0, { scenario: newScenarioAst })\n\n      props.onAstUpdated(mutableFeatureAST)\n    },\n\n    deleteScenario(index) {\n      mutableFeatureAST.feature.children.splice(index, 1)\n      props.onAstUpdated(mutableFeatureAST)\n    }\n  }\n\n  function updateFeatureName(newName) {\n    mutableFeatureAST.feature.name = newName\n    props.onAstUpdated(mutableFeatureAST)\n  }\n\n  function updateFeatureDescription(newDescription) {\n    mutableFeatureAST.feature.description = newDescription\n    props.onAstUpdated(mutableFeatureAST)\n  }\n\n  return <>\n    <FeatureEditorRender\n      keyword={ featureAST.keyword }\n      name={ featureAST.name }\n      description= { featureAST.description }\n      featureChildren={ featureAST.children }\n\n      scenarioActions={ scenarioActions }\n      updateFeatureName={ updateFeatureName }\n      updateFeatureDescription={ updateFeatureDescription }\n    />\n  </>\n}\n","import React from 'react'\n\nexport default function(props) {\n  return <div className=\"text-renderer\">\n    <textarea id=\"gherkin-render\" value={props.txtDefinition} rows=\"20\" readonly=\"true\"/>\n  </div>\n}","import React from 'react'\nimport './App.sass'\nimport FeatureEditorContainer from './FeatureEditorContainer'\nimport FeatureRenderer from './FeatureRenderer'\nimport { IdGenerator } from '@cucumber/messages'\nimport { AstBuilder, Parser } from '@cucumber/gherkin'\nimport { pretty } from '@cucumber/gherkin-utils'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    const featureTxt = [\n      \"Feature:\",\n      \"You can add a description to the feature\",\n      \"  Scenario: A simple Gherkin example\",\n      \"    Given some context\",\n      \"    When I perform an action\",\n      \"    Then I should observe an expected outcome\"\n    ].join(\"\\n\")\n\n    const featureAst = this.computeAst(featureTxt)\n\n    this.state = {\n      txtDefinition: featureTxt,\n      ast: featureAst\n    }\n\n    this.onAstUpdated = this.updateAst.bind(this)\n  }\n\n  render() {\n    return (\n      <div className=\"l-app\">\n        <FeatureEditorContainer ast={this.state.ast}\n          onAstUpdated={this.onAstUpdated}\n          addNewScenario={this.onAddNewScenario}\n        />\n        <FeatureRenderer txtDefinition={this.state.txtDefinition}/>\n      </div>\n    )\n  }\n\n  computeAst(textDef) {\n    const newId = IdGenerator.uuid()\n    const parser = new Parser(new AstBuilder(newId))\n    const gherkinDocument = parser.parse(textDef)\n    gherkinDocument.uri = ''\n\n    return gherkinDocument\n  }\n\n  updateAst(newAst) {\n    const newTxtDefinition = pretty(newAst)\n\n    this.setState({\n      ast: newAst,\n      txtDefinition: newTxtDefinition\n    })\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport WebFont from 'webfontloader'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nWebFont.load({\n  google: {\n    families: ['Open Sans:300,400,600', 'sans-serif']\n  }\n});"],"sourceRoot":""}