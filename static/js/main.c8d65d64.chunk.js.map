{"version":3,"sources":["feature-editor/title/Title.js","feature-editor/scenario/steps/Annotation.js","feature-editor/scenario/steps/Text.js","feature-editor/scenario/steps/Step.js","feature-editor/scenario/Scenario.js","FeatureEditor.js","FeatureRenderer.js","lib/AstToGherkinConverter.js","App.js","serviceWorker.js","index.js"],"names":["Title","props","handleUpdateFeatureName","updateFeatureName","bind","defaultValue","this","title","onBlur","e","target","value","React","Component","Annotation","handleChange","onAnnotationChange","type","annotation","trim","name","list","id","Text","text","onTextChange","Step","editStepAnnotation","editStepText","step","keyword","newStepAst","Object","assign","onEditStep","index","Scenario","onEditScenarioName","editScenarioName","editStep","addStep","scenarioHeader","scenarioSteps","onClick","scenario","steps","map","newScenarioAst","updateFeatureChild","stepAst","scenarioLength","length","lastStep","newStepLocation","location","scenarioLocation","line","column","addNewStepLine","FeatureEditor","onUpdateFeatureName","onUpdateFeatureChild","scenarioList","featureScenarios","sc","featureName","addNewScenario","ast","feature","children","newName","updatedAst","onAstUpdated","childAst","FeatureRenderer","txtDefinition","rows","readonly","AstToGherkinConverter","featurefileLines","handleFeatureNode","renderAsString","featureNode","featurePrototype","handleFeaturePrototype","handleFeatureChildren","concat","childrenNode","childrenLines","forEach","child","childPrototype","handleSteps","stepsNode","stepsLines","lines","fileSize","reduce","prev","current","file","Array","l","spaces","join","App","featureTxt","featureAst","computeAst","state","updateAst","onAddNewStepLine","onAddNewScenario","textDef","parser","Gherkin","Parser","AstBuilder","scanner","TokenScanner","matcher","TokenMatcher","parse","newAst","newTxtDefinition","toGherkin","setState","defAsArray","split","splice","push","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c8d65d64.chunk.js","sourcesContent":["import React from 'react';\nimport Gherkin from 'gherkin'\n\nexport default class Title extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleUpdateFeatureName = this.updateFeatureName.bind(this)\n  }\n\n  render() {\n    return (\n      <h1>\n        Feature: <input defaultValue={this.props.title} onBlur={this.handleUpdateFeatureName}/>\n      </h1>\n    )\n  }\n\n  updateFeatureName(e) {\n    this.props.updateFeatureName(e.target.value)\n  }\n}","import React from 'react'\n\nexport default class Annotation extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(e) {\n    this.props.onAnnotationChange(e.target.value)\n  }\n\n  render() {\n    return (\n      <span>\n        <input type=\"text\" defaultValue={this.props.annotation.trim()}\n        name=\"annotation\"\n        list=\"annotations\" onBlur={this.handleChange}/>\n\n        <datalist id=\"annotations\">\n          <select>\n            <option value=\"Given\"/>\n            <option value=\"When\"/>\n            <option value=\"And\"/>\n          </select>\n        </datalist>\n      </span>\n    )\n  }\n}","import React from 'react'\n\nexport default class Text extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  render() {\n    return (<span>\n      <input type=\"text\" defaultValue={this.props.text.trim()} name=\"text\" onBlur={this.handleChange}/>\n    </span>)\n  }\n\n  handleChange(e) {\n    this.props.onTextChange(e.target.value)\n  }\n}","import React from 'react'\nimport Annotation from './Annotation'\nimport Text from './Text'\n\nexport default class Step extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.onAnnotationChange = this.editStepAnnotation.bind(this)\n    this.onTextChange = this.editStepText.bind(this)\n  }\n\n  render() {\n    return (\n      <li>\n          <Annotation annotation={this.props.step.keyword} onAnnotationChange={this.onAnnotationChange} />\n          <Text text={this.props.step.text} onTextChange={this.onTextChange}/>\n      </li>\n    )\n  }\n\n  editStepAnnotation(annotation) {\n    const newStepAst = Object.assign(this.props.step)\n    newStepAst.keyword = annotation + ' '\n    this.props.onEditStep(newStepAst, this.props.index)\n  }\n\n  editStepText(text) {\n    const newStepAst = Object.assign(this.props.step)\n    newStepAst.text = text\n    this.props.onEditStep(newStepAst, this.props.index)\n  }\n}","import React from 'react'\nimport ScenarioStep from './steps/Step'\n\nexport default class Scenario extends React.Component {\n  constructor(props) {\n    super(props)\n    this.onEditScenarioName = this.editScenarioName.bind(this)\n    this.onEditStep = this.editStep.bind(this)\n    this.addStep = this.addStep.bind(this)\n  }\n\n  render() {\n    return (\n      <li>\n        {this.scenarioHeader()}\n        <ul>\n          {this.scenarioSteps()}\n          <button onClick={this.addStep}>+ Add step</button>\n        </ul>\n      </li>\n    )\n  }\n\n  scenarioHeader() {\n    return <h2>\n      {this.props.scenario.keyword}: <input defaultValue={this.props.scenario.name} onBlur={this.onEditScenarioName}/>\n    </h2>\n  }\n\n  scenarioSteps() {\n    return this.props.scenario.steps.map((step, index) =>\n      <ScenarioStep step={step} index={index} onEditStep={this.onEditStep}/>\n    )\n  }\n\n  editScenarioName(e) {\n    let newScenarioAst = Object.assign(this.props.scenario)\n    newScenarioAst.name = e.target.value\n    this.props.updateFeatureChild(newScenarioAst, this.props.index)\n  }\n\n  editStep(stepAst, index) {\n    let newScenarioAst = Object.assign(this.props.scenario)\n    newScenarioAst.steps[index] = stepAst\n    this.props.updateFeatureChild(newScenarioAst, this.props.index)\n  }\n\n  addStep() {\n    let newScenarioAst = Object.assign(this.props.scenario)\n    const scenarioLength = this.props.scenario.steps.length,\n          lastStep = this.props.scenario.steps[scenarioLength - 1]\n\n    let newStepLocation = null\n\n    if (!lastStep) {\n      const scenarioLocation = this.props.scenario.location\n      newStepLocation = { line: scenarioLocation.line, column: scenarioLocation.column + 2 }\n    } else {\n      newStepLocation = lastStep.location\n    }\n\n    this.props.addNewStepLine(newStepLocation)\n  }\n}\n","import React from 'react';\nimport Title from './feature-editor/title/Title'\nimport Scenario from './feature-editor/scenario/Scenario'\n\nexport default class FeatureEditor extends React.Component {\n  constructor(props) {\n    super(props)\n    this.onUpdateFeatureName = this.updateFeatureName.bind(this)\n    this.onUpdateFeatureChild = this.updateFeatureChild.bind(this)\n  }\n\n  render() {\n    const scenarioList = this.featureScenarios().map((sc, index) =>\n      <Scenario scenario={sc} index={index} updateFeatureChild={this.onUpdateFeatureChild} addNewStepLine={this.props.addNewStepLine}/>\n    )\n    return (\n      <div>\n        <Title title={this.featureName()} updateFeatureName={this.onUpdateFeatureName}/>\n        <ul>\n          {scenarioList}\n          <button onClick={this.props.addNewScenario}>+ Add scenario</button>\n        </ul>\n      </div>\n    )\n  }\n\n  featureName() {\n    return this.props.ast.feature.name\n  }\n\n  featureScenarios() {\n    return this.props.ast.feature.children\n  }\n\n  updateFeatureName(newName) {\n    let updatedAst = Object.assign(this.props.ast)\n    updatedAst.feature.name = newName\n\n    this.props.onAstUpdated(updatedAst)\n  }\n\n  updateFeatureChild(childAst, index) {\n    let updatedAst = Object.assign(this.props.ast)\n    updatedAst.feature.children[index] = childAst\n\n    this.props.onAstUpdated(updatedAst)\n  }\n}","import React from 'react'\n\nexport default class FeatureRenderer extends React.Component {\n  render() {\n    return <div>\n      <hr/>\n      <textarea value={this.props.txtDefinition} rows=\"20\" readonly=\"true\"/>\n    </div>\n  }\n}","export default class AstToGherkinConverter {\n  constructor(ast) {\n    this.ast = ast\n  }\n\n  toGherkin() {\n    let featurefileLines = this.handleFeatureNode(this.ast.feature)\n    return this.renderAsString(featurefileLines)\n  }\n\n  handleFeatureNode(featureNode) {\n    let featurePrototype = this.handleFeaturePrototype(featureNode)\n    let children = this.handleFeatureChildren(featureNode.children)\n\n    return [].concat(featurePrototype).concat(children)\n  }\n\n  handleFeaturePrototype(featureNode) {\n    return [{\n      location: featureNode.location,\n      text: `${featureNode.keyword}: ${featureNode.name}`\n    }]\n  }\n\n  handleFeatureChildren(childrenNode) {\n    let childrenLines = []\n\n    childrenNode.forEach(child => {\n      let childPrototype = [{\n        location: child.location,\n        text: `${child.keyword}: ${child.name}`\n      }]\n      let steps = this.handleSteps(child.steps)\n      childrenLines = childrenLines.concat(childPrototype).concat(steps)\n    })\n\n\n    return childrenLines\n  }\n\n  handleSteps(stepsNode) {\n    let stepsLines = []\n\n    stepsNode.forEach(step => {\n      stepsLines = stepsLines.concat({\n        location: step.location,\n        text: `${step.keyword}${step.text}`\n      })\n    })\n    return stepsLines\n  }\n\n  renderAsString(lines) {\n    const lastLine = lines.reduce((prev, current) => (prev.location.line > current.location.line) ? prev : current)\n    const fileSize = lastLine.location.line + 1\n    let file = new Array(fileSize)\n\n    lines.forEach(l => {\n      let spaces = new Array(l.location.column).join(\" \")\n      file[l.location.line - 1] = spaces + l.text\n    })\n\n    return file.join(\"\\n\")\n  }\n}","import React from 'react';\nimport './App.css';\nimport FeatureEditor from './FeatureEditor'\nimport FeatureRenderer from './FeatureRenderer'\nimport Gherkin from 'gherkin'\nimport AstToGherkinConverter from './lib/AstToGherkinConverter'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    const featureTxt = [\n      \"Feature:\",\n    ].join(\"\\n\")\n\n    const featureAst = this.computeAst(featureTxt)\n\n    this.state = {\n      txtDefinition: featureTxt,\n      ast: featureAst\n    }\n\n    this.onAstUpdated = this.updateAst.bind(this)\n    this.onAddNewStepLine = this.addNewStepLine.bind(this)\n    this.onAddNewScenario = this.addNewScenario.bind(this)\n  }\n\n  render() {\n    return (\n      <div>\n        <FeatureEditor ast={this.state.ast} onAstUpdated={this.onAstUpdated} addNewStepLine={this.onAddNewStepLine} addNewScenario={this.onAddNewScenario}/>\n        <FeatureRenderer txtDefinition={this.state.txtDefinition}/>\n      </div>\n    )\n  }\n\n  computeAst(textDef) {\n    const parser = new Gherkin.Parser(new Gherkin.AstBuilder())\n    const scanner = new Gherkin.TokenScanner(textDef)\n    const matcher = new Gherkin.TokenMatcher()\n\n    return parser.parse(scanner, matcher)\n  }\n\n  updateAst(newAst) {\n    const newTxtDefinition = new AstToGherkinConverter(newAst).toGherkin()\n\n    this.setState({\n      ast: newAst,\n      txtDefinition: newTxtDefinition\n    })\n  }\n\n  addNewStepLine(location) {\n    let newTxtDefinition = Object.assign(this.state.txtDefinition)\n    let defAsArray = newTxtDefinition.split(\"\\n\")\n    const spaces = new Array(location.column).join(\" \")\n    defAsArray.splice(location.line, 0, spaces + \"* \")\n    newTxtDefinition = defAsArray.join(\"\\n\")\n\n    this.setState({\n      ast: this.computeAst(newTxtDefinition),\n      txtDefinition: newTxtDefinition\n    })\n  }\n\n  addNewScenario() {\n    let newTxtDefinition = Object.assign(this.state.txtDefinition)\n    let defAsArray = newTxtDefinition.split(\"\\n\")\n\n    defAsArray.push(\"  Scenario: \\n\")\n    newTxtDefinition = defAsArray.join(\"\\n\")\n\n    this.setState({\n      ast: this.computeAst(newTxtDefinition),\n      txtDefinition: newTxtDefinition\n    })\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}